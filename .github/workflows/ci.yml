name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Install dependencies
      run: |
        poetry install

    - name: Run tests
      run: |
        poetry run pytest

    - name: Run linting
      run: |
        poetry run flake8

    - name: Check type hints
      run: |
        poetry run mypy .

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    # - name: Configure Poetry
    #   run: |
    #     poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}

    - name: Build and publish
      # env:
      #   PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      run: |
        # poetry config pypi-token.pypi $PYPI_TOKEN
        poetry build
        # poetry publish